CREATE DATABASE IF NOT EXISTS ANDIOOP;
USE ANDIOOP;

DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FRIEND;
DROP TABLE IF EXISTS REQUESTS;
DROP TABLE IF EXISTS POSTS;
DROP TABLE IF EXISTS REPLIES;
DROP TABLE IF EXISTS RESPONSE;
DROP TABLE IF EXISTS FARMER;
DROP TABLE IF EXISTS PLOT;
DROP TABLE IF EXISTS INVENTORY;
DROP TABLE IF EXISTS GIFT;
DROP TABLE IF EXISTS CROP;
DROP TABLE IF EXISTS STEALPLOT;

CREATE TABLE USERS (
    USERNAME            VARCHAR(16) NOT NULL,
    PWD                 VARCHAR(255) NOT NULL,
    FULL_NAME           VARCHAR(255) NOT NULL,
    PRIMARY KEY(USERNAME)
);

CREATE TABLE FRIEND (
    USERNAME            VARCHAR(16) NOT NULL,
    FRIEND_USERNAME     VARCHAR(16) NOT NULL,
    PRIMARY KEY(USERNAME, FRIEND_USERNAME)
);

CREATE TABLE REQUESTS (
    USERNAME            VARCHAR(16) NOT NULL,
    SENDER              VARCHAR(16) NOT NULL,
    PRIMARY KEY(USERNAME, SENDER)
);

CREATE TABLE POSTS (
    SENDER              VARCHAR(16)     NOT NULL,
    USERNAME            VARCHAR(16)     NOT NULL,
    THREAD_ID           INT             NOT NULL AUTO_INCREMENT,
    CONTENT             VARCHAR(1000) NOT NULL,
    LIKES               INT,
    DISLIKES            INT,                    
    `TIMESTAMP`         TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(THREAD_ID, USERNAME, SENDER)
);

CREATE TABLE REPLIES (
    THREAD_ID           INT NOT NULL,
    USERNAME            VARCHAR(16) NOT NULL,
    CONTENT             VARCHAR(1000) NOT NULL,
    TIMESTAMP           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    REPLY_ID            INT NOT NULL,
    PRIMARY KEY(THREAD_ID, REPLY_ID)
);

CREATE TABLE RESPONSE (
    THREAD_ID           INT NOT NULL,
    USERNAME            VARCHAR(16) NOT NULL,
    LIKE_DISLIKE        BOOLEAN NOT NULL,
    PRIMARY KEY(THREAD_ID, USERNAME)
);

CREATE TABLE FARMER (
    USERNAME            VARCHAR(16) NOT NULL,
    EXPAMT              INT NOT NULL,
    GOLD                INT NOT NULL,
    PRIMARY KEY(USERNAME)
);

CREATE TABLE PLOT (
    USERNAME            VARCHAR(16) NOT NULL,
    PLOT_ID             INT NOT NULL AUTO_INCREMENT,
    CROP_TYPE           VARCHAR(100),
    YIELD               INT NOT NULL,
    TIMESTAMP           TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(PLOT_ID, USERNAME)
);

CREATE TABLE STEALPLOT (
    USERNAME            VARCHAR(16) NOT NULL,
    FRIEND_USERNAME     VARCHAR(16) NOT NULL,
    PLOT_ID             INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(PLOT_ID, USERNAME, FRIEND_USERNAME)
);

CREATE TABLE INVENTORY (
    USERNAME            VARCHAR(16) NOT NULL,
    ITEM                VARCHAR(100) NOT NULL,
    QUANTITY            INT NOT NULL,
    PRIMARY KEY(USERNAME, ITEM)
);

CREATE TABLE GIFT (
    USERNAME            VARCHAR(16) NOT NULL,
    FRIEND_USERNAME     VARCHAR(16) NOT NULL,
    GIFT_ITEM           VARCHAR(100) NOT NULL,
    ACCEPTANCE          BOOLEAN NOT NULL,
    TIMESTAMP           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(USERNAME, FRIEND_USERNAME, TIMESTAMP)
);

CREATE TABLE CROP (
    CROPNAME            VARCHAR(100) NOT NULL,
    COST                INT NOT NULL,
    GROWTH_TIME         INT NOT NULL,
    XP                  INT NOT NULL,
    MINYIELD            INT NOT NULL,
    MAXYIELD            INT NOT NULL,
    SALE_PRICE          INT NOT NULL,
    PRIMARY KEY (CROPNAME)
);

DELIMITER $$
CREATE TRIGGER INSERT_PLOT AFTER INSERT ON users FOR EACH ROW 
	BEGIN  
    INSERT INTO PLOT VALUES 
    (new.username,NULL,NULL,0,DEFAULT),
    (new.username,NULL,NULL,0,DEFAULT),
    (new.username,NULL,NULL,0,DEFAULT),
    (new.username,NULL,NULL,0,DEFAULT),
    (new.username,NULL,NULL,0,DEFAULT); 
    END $$

CREATE TRIGGER INSERT_ADD_PLOT AFTER UPDATE ON FARMER FOR EACH ROW 
	BEGIN  
    IF (old.expamt > 5000 AND new.expamt >= 12000) THEN   
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
	ELSEIF (old.expamt > 2500 AND new.expamt >= 12000) THEN  
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);         
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
	ELSEIF (old.expamt > 2500 AND new.expamt >= 5000) THEN   
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
    ELSEIF (old.expamt > 1000 AND new.expamt >= 12000) THEN   
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
	ELSEIF (OLD.expamt > 1000 AND new.expamt >= 5000) THEN
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
	ELSEIF (OLD.expamt > 1000 AND new.expamt >= 2500) THEN
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
	ELSEIF (old.expamt < 1000 AND new.expamt >= 12000) THEN   
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
	ELSEIF (old.expamt < 1000 AND NEW.expamt >= 5000) THEN
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);  
	ELSEIF (old.expamt < 1000 AND NEW.expamt >= 2500) THEN   
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
        INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
	ELSEIF (old.expamt < 1000 AND new.expamt >= 1000) THEN   
		INSERT INTO PLOT VALUES (new.username,NULL,NULL,0,DEFAULT);
	END IF;
    END $$

DELIMITER ;


INSERT INTO USERS (username, pwd, full_name) VALUES ('apple', 'apple123', 'Apple ANG');
INSERT INTO USERS (username, pwd, full_name) VALUES ('dick', 'dick123', 'Dick LONGINUS');
INSERT INTO USERS (username, pwd, full_name) VALUES ('mike', 'mike123', 'Mike OXLONG');
INSERT INTO USERS (username, pwd, full_name) VALUES ('yado', 'yado123', 'Yado WANNADOTHIS');
INSERT INTO USERS (USERNAME, PWD, FULL_NAME) VALUES ('moe', 'moe123', 'Moe LESTER');

INSERT INTO FRIEND (USERNAME, FRIEND_USERNAME) VALUES ('apple' , 'dick');
INSERT INTO FRIEND (USERNAME, FRIEND_USERNAME) VALUES ('dick' , 'apple');
INSERT INTO FRIEND (USERNAME, FRIEND_USERNAME) VALUES ('apple' , 'mike');
INSERT INTO FRIEND (USERNAME, FRIEND_USERNAME) VALUES ('mike' , 'apple');

INSERT INTO REQUESTS (USERNAME, SENDER) VALUES ('apple', 'yado');
INSERT INTO REQUESTS (USERNAME, SENDER) VALUES ('moe', 'apple');

INSERT INTO FARMER (username, expamt, gold) VALUES ('apple', 0, 300);
INSERT INTO FARMER (username, expamt, gold) VALUES ('dick', 0, 0);
INSERT INTO FARMER (username, expamt, gold) VALUES ('mike', 0, 1000);
INSERT INTO FARMER (username, expamt, gold) VALUES ('yado', 0, 0);
INSERT INTO FARMER (username, expamt, gold) VALUES ('moe', 0, 2000);

UPDATE FARMER SET EXPAMT = 1000 WHERE USERNAME = 'apple';
UPDATE FARMER SET EXPAMT = 5000 WHERE USERNAME = 'mike';
UPDATE FARMER SET EXPAMT = 7500 WHERE USERNAME = 'yado'
;
UPDATE FARMER SET EXPAMT = 15000 WHERE USERNAME = 'moe';

INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('apple', 'apple', "Hello World", 3, 1);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('dick', 'apple', "Hello Apple", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('apple', 'dick', "Hello Dick", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('apple', 'moe', "Hello Moe", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('apple', 'john', "Hello John", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('yado', 'yado', "Hello World", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('apple', 'apple', "Hello Sixth Post", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('mike', 'mike', "Hello World", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('moe', 'apple', "Hello World! @apple", 0, 0);
INSERT INTO POSTS (SENDER, USERNAME, CONTENT, LIKES, DISLIKES) VALUES ('moe', 'apple', "Hello Earth! @apple @noone", 0, 0);

INSERT INTO REPLIES (THREAD_ID, USERNAME, CONTENT, REPLY_ID) VALUES (1, 'mike', "HELLO APPLE", 1);
INSERT INTO REPLIES (THREAD_ID, USERNAME, CONTENT, REPLY_ID) VALUES (1, 'yado', "HELLO APPLE", 2);
INSERT INTO REPLIES (THREAD_ID, USERNAME, CONTENT, REPLY_ID) VALUES (1, 'moe', "HELLO APPLE", 3);
INSERT INTO REPLIES (THREAD_ID, USERNAME, CONTENT, REPLY_ID) VALUES (1, 'dick', "HELLO APPLE", 4);

INSERT INTO RESPONSE (THREAD_ID, USERNAME, LIKE_DISLIKE) VALUES (1, 'mike', TRUE);
INSERT INTO RESPONSE (THREAD_ID, USERNAME, LIKE_DISLIKE) VALUES (1, 'yado', TRUE);
INSERT INTO RESPONSE (THREAD_ID, USERNAME, LIKE_DISLIKE) VALUES (1, 'moe', FALSE);
INSERT INTO RESPONSE (THREAD_ID, USERNAME, LIKE_DISLIKE) VALUES (1, 'dick', TRUE);

INSERT INTO CROP (CROPNAME, COST, GROWTH_TIME, XP, MINYIELD, MAXYIELD, SALE_PRICE) VALUES
('Papaya', 20, 30, 8, 75, 100, 15),
('Pumpkin', 30,	60,	5,	5, 200,	20),
('Sunflower', 40, 120, 20, 15, 20, 40),
('Watermelon', 50, 240, 1, 5, 800, 10);

INSERT INTO INVENTORY (USERNAME, ITEM, QUANTITY) VALUES
('apple', 'Papaya', 20),
('apple', 'Pumpkin', 10),
('apple', 'Sunflower', 0),
('apple', 'Watermelon', 0),
('dick', 'Papaya', 30),
('dick', 'Pumpkin', 20),
('dick', 'Sunflower', 40),
('dick', 'Watermelon', 0),
('mike', 'Papaya', 20),
('mike', 'Pumpkin', 50),
('mike', 'Sunflower', 0),
('mike', 'Watermelon', 10),
('yado', 'Papaya', 10),
('yado', 'Pumpkin', 40),
('yado', 'Sunflower', 40),
('yado', 'Watermelon', 30),
('moe', 'Papaya', 0),
('moe', 'Pumpkin', 0),
('moe', 'Sunflower', 0),
('moe', 'Watermelon', 100);

INSERT INTO GIFT VALUES
("apple","mike","Papaya",FALSE,DEFAULT),
("apple","yado","Watermelon",FALSE,DEFAULT),
("yado","moe","Sunflower",FALSE,DEFAULT),
("yado","apple","Watermelon",FALSE,DEFAULT),
("yado","dick","Pumpkin",FALSE,DEFAULT),
("yado","mike","Sunflower",FALSE,DEFAULT),
("yado","moe","Sunflower",FALSE,"2020-03-03 15:45:22");

DELIMITER $$
CREATE TRIGGER UPDATE_INVENTORY AFTER UPDATE ON gift FOR EACH ROW
BEGIN
	IF (new.ACCEPTANCE = TRUE) THEN
		UPDATE andioop.inventory SET quantity = (SELECT QUANTITY FROM (SELECT * FROM andioop.inventory WHERE username = NEW.friend_username AND item = NEW.gift_item) qty) + 1
        WHERE username = NEW.friend_username AND item = NEW.gift_item; 
	END IF;
END$$

DELIMITER ;

DELIMITER $$
CREATE TRIGGER DELETE_STEALPLOT AFTER UPDATE ON plot FOR EACH ROW
BEGIN
	IF (new.crop_type = NULL) THEN
		DELETE FROM stealplot WHERE username = new.USERNAME AND plot_id = new.PLOT_ID;
	END IF;
END$$

DELIMITER ;